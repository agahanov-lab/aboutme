General Design & Aesthetic (Very Important):

Theme: Minimalist, clean, and professional. Draw direct inspiration from the websites of Apple and Scale AI. This means:

Whitespace: Use generous amounts of empty space.

Typography: Use a clean, sans-serif font like "Inter" (you can import it from Google Fonts).

Color Palette: A simple palette. Black text on a white or very light gray background, with a single, muted accent color (e.g., a cool blue or a professional gray) for buttons and links.

Animations & Effects:

All animations should be smooth, subtle, and professional. Use CSS transitions for hover effects.

Implement on-scroll fade-in effects for sections to make the site feel dynamic as the user scrolls.

Geometric & Math Elements:

On the homepage, create a subtle, slowly animating background using JavaScript (p5.js or a similar lightweight library) to render elegant, moving geometric lines or shapes. This should be understated and not distracting.

III. Page-by-Page Breakdown:

1. Homepage (index.html):

Hero Section: A full-screen section with the centered text: "Hi, I'm Mekan." Apply a subtle, cool text effect to this, like a soft glow or a gentle gradient animation. The animated geometric background should be visible here.

Footer: At the very bottom of the page, include a simple footer with:

A contact email address.

Icons for LinkedIn and GitHub that link to my profiles. The icons should be SVG and have a simple hover effect.

2. About Me Page (/about):

Layout: A single-column, centered layout.

Top Section (Profile):

Create a "profile card" or a clean, well-structured text section.

Use clear headings for "Education," "Awards," and "Achievements."

Bottom Section (Resume):

Below the profile section, add a distinct section with a clear call-to-action button.

The button text should be "Download My Resume" and it should link to a resume.pdf file (include a placeholder file in the project).

3. Projects Page (/projects):

Filtering Controls:

At the top of the page, create a clean row of filter buttons.

The buttons should be: "All", "Algorithms", "Mathematics", "Games", and "AI".

The "All" button should be active by default.

Clicking a button should smoothly filter the projects displayed below without a page reload (use JavaScript).

Project Display:

Display projects in a clean grid layout.

Each project should be a "card" with a title, a short description, and the category name.

The cards should have a subtle hover effect (e.g., slightly scaling up or a soft shadow).

4. Blog Page (/blog):

This should be a simple page with a list of blog post titles.

Each title should be a link that opens in a new tab (target="_blank") and goes to an external URL (use placeholder URLs like https://medium.com/@yourusername/post-1).

IV. Backend & Content Management (server.js):

Admin Page (/admin):

Create a simple, password-protected admin page. The password can be hardcoded for now.

This page should NOT be styled like the main site; it's purely functional.

Project Upload Form:

On the admin page, create a form with the following fields:

Project Title (text input)

Project Description (textarea)

Project Category (a dropdown/select menu with "Algorithms", "Mathematics", "Games", and "AI" as options)

A "Submit" button.

Functionality:

When the form is submitted, the backend should save the new project data (title, description, category) to the Replit Database.